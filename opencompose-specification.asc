= OpenCompose Specification
:toc:


# Introduction

This document lists and describes all elements of the proposed filespec for a standardised orchestration file aimed at developers. It also identifies
mappings to existing orchestration solutions such as Docker Compose, Kubernetes/OpenShift and Apache Mesos Marathon.

.File Format
|===
||Description| Value| Note

|*File name*|The name of the file created by a developer that follows this specification|<choreography.yaml>|This name is to be confirmed. We are
currently using a placeholder (choreography)
|*File Format*|The format of the file created by the developer that follows this specification|YAML|
See http://yaml.org/ for a full specification of the yaml format
|*Version*|The version of this specification.|0.1|This is currently a pre-alpha proposal and under heavy development

|===


# Element Structure


----
version: "0.1"
services:
  <service name>:
    container_name: <String>
    context: <Path>
    dockerfile: <Path>
    command: <String>
    entrypoint: <String>
    image: <String>
    extends:
      file: <Path>
      service: <Reference>
    depends_on:
      - <Service Reference>
      - <Service Reference>
    environment:
      - <Key=Value>
      - <Key=Value>
    env_file: <String>
    env_file:
       - <Path>
       - <Path>
    expose:
       - <Container>
    ports:
       - <Host:Container>
    labels:
       - <Label: Value>
    links:
       - <Reference>
       - <Reference>
    volumes:
       - <Host:Container>
    volumes_from:
       - <Service Reference>
----


# Element Overview

.Element Overview
|===
|Object|Description||||

|build|Builds a container using a linux container||||
|context|Either a path to a directory containing a Dockerfile, or a url to a git repository||||
|dockerfile|Alternate Dockerfile.||||
|command|Override the default command.||||
|container_name|Specify a custom container name, rather than a generated default name.||||
|depends_on|Express dependency between services||||
|environment|Add environment variables||||
|expose|Expose ports without publishing them to the host machine||||
|extends|Extend another service, in the current file or another, optionally overriding configuration.||||
|image|Specify the image to start the container from.||||
|labels|Add metadata to containers using Docker labels||||
|net|Network mode. Use the same values as the docker client --net parameter||||
|ports|Expose ports||||
|volumes|Mount paths or named volumes||||
|volumes_from|Mount all of hte volumens from anouther service or container||||
|entrypoint|Override the default entrypoint||||
|env_file|Add environment variables from a file. Can be  a single value or a list||||
|links|Link to containers in another service. Either specify both the service name and a link alias (SERVICE ALIAS), or just the service name.||||
|===



# Detailed Element Specification

.version
Version of the specification used.

This directive is mandatory.
----
version: "0.1"
----

.services
`services` is the main directive and is mandatory with one or more services defined.
----
version: "0.1"
services:
  web:
    ...
  db:
    ...
----

.build
Builds a container image from given path or a context .

Either `build` or `image` directive has to exist in compose file or else error will thrown.
----
build: ./src

build:
  context: ./src
----

.context
Path to  directory containing a Dockerfile or url to Git repository. `context` is used as a sub-option to build.
----
build:
  context: git://mysource/repo/project.git
----

.dockerfile
Alternate Dockerfile used for building an container image. Dockerfile is used as sub-option to build.
----
build:
  dockerfile: Other-Dockerfile

build:
  context: ./src
  dockerfile: Other-Dockerfile
----

.command
Command to override the default command.
----

----

.container_name
*TODO*
----
----

.depends_on
*TODO*
----
----

.environment
List of environment variables to be set in container. Overrides values listed in `env_file`
----
environment:
  - S3_BUCKET: SOME_S3_BUCKET
  - API_KEY: XYZABCDE123
  - API_SECRET:SFZV3EYT89
  - DATABASE_URL="postgres://SOME_URL"
----

.env_file
Add environment variables listed in the file. Variables listed in `environment` override values listed here.
----
env_file: .env

env_file:
  - ./s3_paths.env
  - /aws_keys.env
----


.expose
*TODO*
----
----

.extends
*TODO*
----
----

.image
The image from which the container will start. Needs to be any valid image specified in repository/tag or partial image ids.
----
image: awesome-micro-service:v1

image: nginx
----

.labels
Labels are annotations used to add meta data resources. Can be a list or dictionary.
----
labels:
  release: stable
  role: cache

labels:
  - production
  - rhel
----

.net
*TODO*
----
----


.ports
*TODO*
----
----

.volumes
A list of paths or named volumes which will be mounted and can be shared by resources.

----
volumes:
  - datavolume: /var/data
  - staticpages: /var/www/assets
----

Volumes can optionally provide a unique `volumeId` to define a named volume. Each named volume can have `type` parameter that defines the type of volume and a `options` parameter.

----
volumes :
  volumeId:data
    type: ebs
    options:
      fsType: ext4
      imageID:fobaar
  volumeId: shared-nfs-data
    type: nfs
    options:
      server: 10.10.1.1
      path: "/"
----

.volumes_from
*TODO*
----
----

.entrypoint
*TODO*
----
----

.links
*TODO*
----
----